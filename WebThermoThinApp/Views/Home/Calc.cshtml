@model HomeCalcViewModel
@{
    ViewData["Title"] = "Расчёт охлаждения термически тонких тел";
}
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="container">
    <h2>@ViewData["Title"]</h2>

    <form asp-action="Calc" method="post">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Форма тела:</label>
                    <select asp-for="Shape" id="shapeSelect" class="form-control">
                        <option value="cylinder">Цилиндр</option>
                        <option value="sphere">Шар</option>
                        <option value="plate">Пластина</option>
                    </select>
                </div>

                <div class="form-group" id="orientationGroup">
                    <label>Ориентация:</label>
                    <select asp-for="Orientation" class="form-control">
                        <option value="vertical">Вертикальная</option>
                        <option value="horizontal">Горизонтальная</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Материал:</label>
                    <select asp-for="MaterialType" id="materialSelect" class="form-control"
                            onchange="toggleCustomMaterialFields()">
                        @foreach (var material in Model.AvailableMaterials)
                        {
                            <option value="@material.Key">@material.Value.Name</option>
                        }
                    </select>
                </div>
                <div id="customMaterialFields" style="@(Model.MaterialType == "custom" ? "display:block" : "display:none")">
                    <div class="form-group">
                        <label>Плотность, кг/м3:</label>
                        <input asp-for="MaterialDensity" class="form-control"
                               disabled="@(Model.MaterialType != "custom")" />
                        <span asp-validation-for="MaterialDensity" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Теплоемкость, Дж/(кг∙К):</label>
                        <input asp-for="MaterialHeatCapacity" class="form-control"
                               disabled="@(Model.MaterialType != "custom")" />
                        <span asp-validation-for="MaterialHeatCapacity" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Коэффициент теплопроводности, Вт/(м∙К) :</label>
                        <input asp-for="MaterialConductivity" class="form-control"
                               disabled="@(Model.MaterialType != "custom")" />
                        <span asp-validation-for="MaterialConductivity" class="text-danger"></span>
                    </div>
                </div>
                <script>
                    function toggleCustomMaterialFields() {
                        const materialType = document.getElementById('materialSelect').value;
                        const customFields = document.getElementById('customMaterialFields');
                        const inputs = customFields.querySelectorAll('input');

                        if (materialType === 'custom') {
                            customFields.style.display = 'block';
                            inputs.forEach(input => input.disabled = false);
                        } else {
                            customFields.style.display = 'none';
                            inputs.forEach(input => input.disabled = true);
                        }
                    }
                </script>

                <div class="form-group">
                    <label>Начальная температура тела (°C):</label>
                    <input asp-for="InitialTemp" class="form-control" type="number" step="any" />
                    <span asp-validation-for="InitialTemp" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Температура среды (°C):</label>
                    <input asp-for="EnvTemp" class="form-control" type="number" step="any" />
                    <span asp-validation-for="EnvTemp" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label>Время охлаждения (с):</label>
                    <input asp-for="CoolingTime" class="form-control" type="number" step="any" />
                    <span asp-validation-for="CoolingTime" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Коэффициент излучения:</label>
                    <input asp-for="Emissivity" class="form-control" type="number" step="any" />
                    <span asp-validation-for="Emissivity" class="text-danger"></span>
                </div>

                <!-- Общие поля, скрываются/показываются через JS -->
                <div class="form-group shape-field" data-shape="cylinder sphere">
                    <label>Радиус (м):</label>
                    <input asp-for="Radius" class="form-control" type="number" step="any" />
                    <span asp-validation-for="Radius" class="text-danger"></span>
                </div>

                <div class="form-group shape-field" data-shape="cylinder plate">
                    <label>Высота / Толщина (м):</label>
                    <input asp-for="Height" class="form-control" type="number" step="any" />
                    <span asp-validation-for="Height" class="text-danger"></span>
                </div>

                <div class="form-group shape-field" data-shape="plate">
                    <label>Длина (м):</label>
                    <input asp-for="Length" class="form-control" type="number" step="any" />
                    <span asp-validation-for="Length" class="text-danger"></span>
                </div>

                <div class="form-group shape-field" data-shape="plate">
                    <label>Ширина (м):</label>
                    <input asp-for="Width" class="form-control" type="number" step="any" />
                    <span asp-validation-for="Width" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="text-center mt-3">
            <button type="submit" name="action" value="show" class="btn btn-primary">Рассчитать</button>
            <button type="submit" name="action" value="add" class="btn btn-secondary">Сохранить вариант</button>
        </div>
    </form>

    @if (Model.Result != null)
    {
        <div class="mt-4">
@*             <h3>Параметры среды:</h3>
            <div class="parameters-grid">
                <div class="parameter">
                    <span class="parameter-name">Кинематическая вязкость (ν):</span>
                    <span class="parameter-value">@Model.Result.First().KinematicViscosity.ToString("E4") м²/с</span>
                </div>
                <div class="parameter">
                    <span class="parameter-name">Число Прандтля (Pr):</span>
                    <span class="parameter-value">@Model.Result.First().PrandtlNumber.ToString("F4")</span>
                </div>
                <div class="parameter">
                    <span class="parameter-name">Теплопроводность (λ):</span>
                    <span class="parameter-value">@Model.Result.First().ThermalConductivity.ToString("E4") Вт/(м·K)</span>
                </div>
            </div> *@

            <h3>Результаты:</h3>
            <div class="alert alert-info">
                Число Био: @Model.Result.First().BioNumber.ToString("F4")
                @if (Model.Result.First().BioNumber >= 0.1)
                {
                    <span class="text-danger"> - Тело не является термически тонким!</span>
                }
                else
                {
                    <span class="text-success"> - Тело термически тонкое</span>
                }
            </div>

            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Время, с</th>
                        <th>Температура, °C</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Result)
                    {
                        <tr>
                            <td>@item.Time.ToString("F1")</td>
                            <td>@item.Temperature.ToString("F1")</td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="chart-container">
                <canvas id="tempChart"></canvas>
            </div>
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const shapeSelect = document.getElementById('shapeSelect');
            const orientationGroup = document.getElementById('orientationGroup');
            const shapeFields = document.querySelectorAll('.shape-field');

            function updateFields() {
                const shape = shapeSelect.value;
                orientationGroup.style.display = (shape === 'sphere') ? 'none' : 'block';

                shapeFields.forEach(field => {
                    const shapes = field.dataset.shape.split(" ");
                    field.style.display = shapes.includes(shape) ? 'block' : 'none';
                });
            }

            shapeSelect.addEventListener('change', updateFields);
            updateFields();

            // График
            const tempChartElement = document.getElementById('tempChart');
            if (tempChartElement) {
                const times = @Html.Raw(Json.Serialize(Model.Result?.Select(r => r.Time) ?? new List<double>()));
                const temps = @Html.Raw(Json.Serialize(Model.Result?.Select(r => r.Temperature) ?? new List<double>()));

                if (times.length > 0 && temps.length > 0) {
                    const ctx = tempChartElement.getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: times,
                            datasets: [{
                                label: 'Температура (°C)',
                                data: temps,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(0, 0, 0, 0)',
                                borderWidth: 2,
                                tension: 0.3,
                                pointRadius: 4,
                                pointBackgroundColor: 'rgba(75, 192, 192, 1)'
                            }]
                        },
                        options: {
                            scales: {
                                x: { title: { display: true, text: 'Время (с)' } },
                                y: { title: { display: true, text: 'Температура (°C)' } }
                            },
                            responsive: true,
                            plugins: {
                                legend: { display: true, position: 'top' }
                            }
                        }
                    });
                }
            }
        });
    </script>
}

<style>
    .parameters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
    }

    .parameter {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
    }

    .parameter-name {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
    }

    .parameter-value {
        font-family: monospace;
        font-size: 1.1em;
    }
</style>
