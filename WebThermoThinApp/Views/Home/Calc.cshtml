@model HomeCalcViewModel
@{
    ViewData["Title"] = "Расчёт охлаждения термически тонких тел";
}

<div class="container">
    <h2>@ViewData["Title"]</h2>

    <form asp-action="Calc" method="post">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Форма тела:</label>
                    <select asp-for="Shape" id="shapeSelect" class="form-control">
                        <option value="cylinder">Цилиндр</option>
                        <option value="sphere">Шар</option>
                        <option value="plate">Пластина</option>
                    </select>
                </div>

                <div class="form-group" id="orientationGroup">
                    <label>Ориентация:</label>
                    <select asp-for="Orientation" class="form-control">
                        <option value="vertical">Вертикальная</option>
                        <option value="horizontal">Горизонтальная</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Плотность материала (кг/м³):</label>
                    <input asp-for="MaterialDensity" class="form-control"/>
                </div>

                <div class="form-group">
                    <label>Теплоемкость материала (Дж/(кг·K)):</label>
                    <input asp-for="MaterialHeatCapacity" class="form-control"/>
                </div>

                <div class="form-group">
                    <label>Теплопроводность материала (Вт/(м·K)):</label>
                    <input asp-for="MaterialConductivity" class="form-control"/>
                </div>


                <div class="form-group">
                    <label>Начальная температура тела (°C):</label>
                    <input asp-for="InitialTemp" class="form-control" />
                </div>

                <div class="form-group">
                    <label>Температура среды (°C):</label>
                    <input asp-for="EnvTemp" class="form-control" />
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label>Время охлаждения (с):</label>
                    <input asp-for="CoolingTime" class="form-control" />
                </div>

                <div class="form-group">
                    <label>Коэффициент излучения:</label>
                    <input asp-for="Emissivity" class="form-control" />
                </div>

                <!-- Динамические поля в зависимости от формы -->
                <div id="cylinderFields" class="shape-fields">
                    <div class="form-group">
                        <label>Радиус (м):</label>
                        <input asp-for="Radius" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Высота (м):</label>
                        <input asp-for="Height" class="form-control" />
                    </div>
                </div>

                <div id="sphereFields" class="shape-fields" style="display:none;">
                    <div class="form-group">
                        <label>Радиус (м):</label>
                        <input asp-for="Radius" class="form-control" />
                    </div>
                </div>

                <div id="plateFields" class="shape-fields" style="display:none;">
                    <div class="form-group">
                        <label>Длина (м):</label>
                        <input asp-for="Length" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Ширина (м):</label>
                        <input asp-for="Width" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Толщина (м):</label>
                        <input asp-for="Height" class="form-control" />
                    </div>
                </div>
            </div>
        </div>

        <div class="text-center mt-3">
            <button type="submit" name="action" value="show" class="btn btn-primary">Рассчитать</button>
            <button type="submit" name="action" value="add" class="btn btn-secondary">Сохранить вариант</button>
        </div>
    </form>

    @if (Model.Result != null)
    {
        <div class="mt-4">
            <h3>Параметры среды:</h3>

            <div class="parameters-grid">
                <div class="parameter">
                    <span class="parameter-name">Кинематическая вязкость (ν):</span>
                    <span class="parameter-value">@Model.Result.First().KinematicViscosity.ToString("E4") м²/с</span>
                </div>

                <div class="parameter">
                    <span class="parameter-name">Число Прандтля (Pr):</span>
                    <span class="parameter-value">@Model.Result.First().PrandtlNumber.ToString("F4")</span>
                </div>

                <div class="parameter">
                    <span class="parameter-name">Теплопроводность (λ):</span>
                    <span class="parameter-value">@Model.Result.First().ThermalConductivity.ToString("E4") Вт/(м·K)</span>
                </div>
            </div>

            <h3>Результаты:</h3>

            <div class="alert alert-info">
                Число Био: @Model.Result.First().BioNumber.ToString("F4")
                @if (Model.Result.First().BioNumber >= 0.1)
                {
                    <span class="text-danger"> - Тело не является термически тонким!</span>
                }
                else
                {
                    <span class="text-success"> - Тело термически тонкое</span>
                }
            </div>

            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Время, с</th>
                        <th>Температура, °C</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Result)
                    {
                        <tr>
                            <td>@item.Time.ToString("F1")</td>
                            <td>@item.Temperature.ToString("F1")</td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="chart-container">
                <canvas id="tempChart"></canvas>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const shapeSelect = document.getElementById('shapeSelect');
            const orientationGroup = document.getElementById('orientationGroup');

            // Поля для разных фигур
            const cylinderFields = document.getElementById('cylinderFields');
            const sphereFields = document.getElementById('sphereFields');
            const plateFields = document.getElementById('plateFields');

            // Функция обновления видимости полей
            function updateFields() {
                const shape = shapeSelect.value;

                // Скрываем все поля
                cylinderFields.style.display = 'none';
                sphereFields.style.display = 'none';
                plateFields.style.display = 'none';

                // Показываем нужные поля
                if (shape === 'cylinder') {
                    cylinderFields.style.display = 'block';
                    orientationGroup.style.display = 'block';
                }
                else if (shape === 'sphere') {
                    sphereFields.style.display = 'block';
                    orientationGroup.style.display = 'none';
                }
                else if (shape === 'plate') {
                    plateFields.style.display = 'block';
                    orientationGroup.style.display = 'block';
                }
            }

            // Обработчик изменения выбора формы
            shapeSelect.addEventListener('change', updateFields);

            // Инициализация при загрузке
            updateFields();
        });
    </script>
}

<style>
    .parameters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
    }

    .parameter {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
    }

    .parameter-name {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
    }

    .parameter-value {
        font-family: monospace;
        font-size: 1.1em;
    }
</style>

@* @section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const shapeSelect = document.getElementById('shapeSelect');
            const orientationGroup = document.getElementById('orientationGroup');

            // Функция для скрытия/показа ориентации
            function toggleOrientation() {
                orientationGroup.style.display =
                    shapeSelect.value === 'sphere' ? 'none' : 'block';
            }

            // Обрабатываем изменение выбора формы
            shapeSelect.addEventListener('change', toggleOrientation);

            // Вызываем сразу при загрузке страницы
            toggleOrientation();
        });
    </script>
} *@